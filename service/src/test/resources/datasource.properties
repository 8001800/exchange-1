# 数据库相关
jdbc.driver = ${jdbc.driver}
jdbc.url = ${jdbc.url}
jdbc.username = ${jdbc.username}
jdbc.password = ${jdbc.password}

# 池初始化大小
jdbc.initialSize=${jdbc.initialSize}

# 池最小连接数
jdbc.minIdle=${jdbc.minIdle}

# 池最大连接数
jdbc.maxIdle= ${jdbc.maxIdle}

# 池最大连接数
jdbc.maxActive=${jdbc.maxActive}

# 获取连接等待超时的时间
jdbc.maxWait=${jdbc.maxWait}

# 对于建立时间超过removeAbandonedTimeout的连接强制关闭
jdbc.removeAbandoned = ${jdbc.removeAbandoned}

# 指定连接建立多长时间就需要被强制关闭
jdbc.removeAbandonedTimeout= ${jdbc.removeAbandonedTimeout}

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
jdbc.timeBetweenEvictionRunsMillis=${jdbc.timeBetweenEvictionRunsMillis}

# 一个连接在池中最小生存的时间，单位是毫秒
jdbc.minEvictableIdleTimeMillis=${jdbc.minEvictableIdleTimeMillis}

# 是否打开PSCache
jdbc.poolPreparedStatements=${jdbc.poolPreparedStatements}

# 要启用PSCache,必须配置大于0,当大于0时,poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
jdbc.maxOpenPreparedStatements = 100

# 指定每个连接上PSCache的大小
jdbc.maxPoolPreparedStatementPerConnectionSize=${jdbc.maxPoolPreparedStatementPerConnectionSize}

# 连接检测
jdbc.validationQuery = SELECT 'x'

# 连接检测超时时间
jdbc.validationQueryTimeout=3600

# 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
jdbc.testWhileIdle = true

# 借出连接时不要测试，否则很影响性能
jdbc.testOnBorrow = false
# 归还连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能
jdbc.testOnReturn = false
# 属性类型是字符串,通过别名的方式配置扩展插件,常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
jdbc.filters = mergeStat,log4j,config

# 关闭abanded连接时输出错误日志
jdbc.logAbandoned = false

# JPA是否显示sql
show_sql=${show_sql}